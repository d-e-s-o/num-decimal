# Copyright (C) 2023 Daniel Mueller <deso@posteo.net>
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Build without debug information enabled to decrease compilation time
  # and binary sizes in CI. This option is assumed to only have marginal
  # effects on the generated code, likely only in terms of section
  # arrangement. See
  # https://doc.rust-lang.org/cargo/reference/environment-variables.html
  # https://doc.rust-lang.org/rustc/codegen-options/index.html#debuginfo
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    - name: Build
      run: |
        # TODO: Once we bump our minimum supported Rust version to 1.56
        #       we should use cargo's --profile option here and have
        #       --release builds happen concurrently as part of the
        #       job matrix.
        cargo build --lib --tests --features=serde --verbose
        cargo build --lib --tests --features=serde --verbose --release
        cargo build --lib --tests --features=serde,num-v04 --no-default-features --verbose
        cargo build --lib --tests --features=serde,num-v04 --no-default-features --verbose --release
  build-minimum:
    name: Build using minimum versions of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Nightly Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - run: cargo +nightly -Z minimal-versions update
      - name: Install minimum Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          # Please adjust README file when bumping version.
          toolchain: 1.46.0
          default: true
      - name: Build
        run: cargo build --features=serde,num-v04 --no-default-features --locked
  test:
    name: Test and coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - name: Test and gather coverage
      run: cargo llvm-cov --lcov --output-path lcov.info --features=serde,num-v04 --no-default-features
    - name: Upload code coverage results
      uses: codecov/codecov-action@v4
      with:
        files: lcov.info
  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - run: cargo clippy --lib --bins --tests --examples --no-default-features --features=serde,num-v04 -- -A unknown_lints -D warnings
  rustfmt:
    name: Check code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
          override: true
      - run: cargo +nightly fmt -- --check
  cargo-doc:
    name: Generate documentation
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: '-A unknown_lints -A renamed_and_removed_lints -D warnings'
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo doc --no-deps --no-default-features --features=serde,num-v04
